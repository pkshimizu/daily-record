# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:very_good_analysis/analysis_options.yaml

# Additional analyzer settings
analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/generated_plugin_registrant.dart"
  errors:
    invalid_annotation_target: ignore

# Linter rules customization
linter:
  rules:
    # Code style
    prefer_single_quotes: true
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true
    prefer_const_declarations: true
    prefer_final_fields: true
    prefer_final_locals: true
    
    # Best practices
    avoid_print: true
    avoid_unnecessary_containers: true
    avoid_web_libraries_in_flutter: true
    prefer_typing_uninitialized_variables: true
    use_key_in_widget_constructors: true
    
    # Performance
    prefer_const_constructors_in_immutables: true
    
    # Error prevention
    avoid_empty_else: true
    avoid_relative_lib_imports: true
    avoid_returning_null_for_future: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    cancel_subscriptions: true
    close_sinks: true
    comment_references: true
    control_flow_in_finally: true
    empty_statements: true
    hash_and_equals: true
    invariant_booleans: true
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    literal_only_boolean_expressions: true
    no_adjacent_strings_in_list: true
    no_duplicate_case_values: true
    prefer_adjacent_string_concatenation: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_contains: true
    prefer_equal_for_default_values: true
    prefer_expression_function_bodies: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_generic_function_type_aliases: true
    prefer_if_null_operators: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_iterable_whereType: true
    prefer_mixin: true
    prefer_null_aware_operators: true
    prefer_spread_collections: true
    prefer_void_to_null: true
    recursive_getters: true
    slash_for_doc_comments: true
    type_init_formals: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_null_checks: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_statements: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unrelated_type_equality_checks: true
    use_build_context_synchronously: true
    use_rethrow_when_possible: true
    valid_regexps: true

# Dart Code Metrics configuration
dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 4
    source-lines-of-code: 50
  metrics-exclude:
    - test/**
  rules:
    - avoid-unnecessary-type-casts
    - avoid-unnecessary-type-assertions
    - avoid-nested-conditional-expressions
    - avoid-banned-imports:
        banned-imports:
          - package:http/http.dart: "Use dio for HTTP requests instead"
    - avoid-dynamic-calls
    - avoid-collection-methods-with-unrelated-types
    - avoid-unnecessary-setstate
    - avoid-wrapping-in-padding
    - prefer-extracting-callbacks
    - prefer-match-file-name
    - no-equal-then-else
    - no-magic-number:
        allowed: [0, 1, -1, 2, 10, 100, 1000]
    - prefer-conditional-expressions
    - prefer-first
    - prefer-last
    - prefer-single-widget-per-file
    - provide-correct-intl-args
    - require-named-arguments
    - sized-box-for-whitespace
    - use-decorated-box
    - use-design-system-colors
    - use-design-system-typography
    - use-design-system-spacing

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
